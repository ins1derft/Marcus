services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    ports: ["80:80", "443:443"]
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:rw
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    restart: unless-stopped
    networks: [proxy]

  acme-companion:
    image: nginxproxy/acme-companion
    environment:
      DEFAULT_EMAIL: "admin@itts.su"
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
    restart: unless-stopped
    networks: [proxy]

  meili:
    image: getmeili/meilisearch:v1.10
    environment:
      MEILI_NO_ANALYTICS: "true"
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-dev_meili_key}
      VIRTUAL_HOST: maili.vpsmarcus.itts.su
      LETSENCRYPT_HOST: maili.vpsmarcus.itts.su
      VIRTUAL_PORT: 7700
    volumes: ["meili_data:/meili_data"]
    restart: unless-stopped
    networks: [proxy, default]

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: marcus
      POSTGRES_USER: marcus
      POSTGRES_PASSWORD: marcus
    volumes: ["pg_data:/var/lib/postgresql/data"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marcus -d marcus"]
      interval: 5s
      timeout: 5s
      retries: 20

  cms:
    image: node:22-alpine
    working_dir: /app
    command: >
      sh -lc "corepack enable &&
              corepack prepare pnpm@9.12.3 --activate &&
              pnpm install &&
              pnpm develop"
    volumes:
      - ./apps/cms:/app
      - ./apps/cms/public/uploads:/app/public/uploads
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      PORT: 1337
      DATABASE_CLIENT: postgres
      DATABASE_URL: postgres://marcus:marcus@db:5432/marcus
      VIRTUAL_HOST: cms.vpsmarcus.itts.su
      LETSENCRYPT_HOST: cms.vpsmarcus.itts.su
      VIRTUAL_PORT: 1337
    depends_on:
      db:
        condition: service_healthy
    networks: [proxy, default]

  web:
    build:
      context: ./apps/web
    environment:
      NODE_ENV: development
      VIRTUAL_HOST: vpsmarcus.itts.su
      LETSENCRYPT_HOST: vpsmarcus.itts.su
      VIRTUAL_PORT: 3000
    depends_on:
      cms:
        condition: service_started
      meili:
        condition: service_started
    develop:
      watch:
        - action: sync
          path: ./apps/web
          target: /app
          ignore: ["node_modules/", ".next/"]
    networks: [proxy, default]

networks:
  proxy:
    driver: bridge

volumes:
  certs:
  vhost:
  html:
  meili_data:
  pg_data:
